---
import { getCollection } from 'astro:content';
import i18next from '@/i18n';
import stateConfig from '~@/slate.config';
import type { ThemeOptions } from '@/typings/config';
import ThemeSelect from '@/components/theme-select';
import SocialLinks from '@/components/social-links';
import slateConfig from '~@/slate.config';

interface Props {
  copyright?: string;
}

const { copyright = stateConfig.footer?.copyright } = Astro.props;

const postCollection = await getCollection('post', ({ data }) => {
  return import.meta.env.DEV || data.draft !== true;
});

const tagCounts = postCollection.reduce<Record<string, number>>(
  (res, post) => {
    const postTags = post.data.tags;
    if (!postTags || !postTags.length) return res;
    postTags.forEach((tag) => {
      if (tag.trim() === '') return;

      if (res[tag]) {
        res[tag]++;
      } else {
        res[tag] = 1;
      }
    });
    return res;
  },
  {
    [i18next.t('common.all')]: postCollection.length,
  },
);

const tags = Object.keys(tagCounts).map((tag) => ({
  name: tag,
  count: tagCounts[tag],
}));
---

<footer class="mt-auto">
  <section class="mb-16">
    <ul class="flex flex-wrap gap-2 text-base text-slate10">
      {
        tags.map(({ name, count }) => (
          <li class="block cursor-pointer rounded-full bg-slate3 px-4 py-2 text-slate10 transition-all hover:bg-slate4 hover:text-slate11">
            {name}
            <sup class="text-[10px] text-slate8">{count}</sup>
          </li>
        ))
      }
    </ul>
  </section>
  {!!slateConfig.socialLinks && <SocialLinks client:visible />}
  <div class="mt-4 flex items-center justify-between">
    <div class="text-slate8 text-sm">{copyright}</div>
    {/* S theme selection */}
    {(stateConfig.theme as ThemeOptions).enableUserChange && <ThemeSelect client:visible />}
    {/* E theme selection */}
  </div>

</footer>
